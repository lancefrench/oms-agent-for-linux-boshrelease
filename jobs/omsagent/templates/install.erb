#!/bin/bash

retry_create_symlinks()
{
    if [ -z "$1" ] || [ -z "$2" ]; then
        echo "Function \"retry_create_symlinks\" called with invalid parameter"
        exit 1
    fi

    DIR=$1
    LINK=$2

    if [ ! -L $LINK ]; then
        RETRIES=2
        while [ $RETRIES -gt 0 ]; do
            # If $LINK exists and is a directory, backup the logs and then recreate it as a symlink
            if [ -d $LINK ]; then
                mv -f $LINK/* $DIR/
                rm -rf $LINK
            fi
            ln -s $DIR $LINK
            if [ -L $LINK ]; then
                break
            fi
            RETRIES=$((RETRIES - 1))
        done
        if [ $RETRIES -eq 0 ]; then
            echo "Failed to create symlink $LINK to $DIR"
        fi
    fi
}

# Utilize the functions later
source /var/vcap/packages/omsagent/utils.sh

workspace_id=<%= p('oms.workspace_id') %>
workspace_key=<%= p('oms.workspace_key') %>
oms_top_level_domain=<%= p('oms.top_level_domain', "opinsights.azure.com") %>
rsyslog_port=<%= p('rsyslog.port', 25224) %>

# Detect dpkg
which dpkg > /dev/null 2>&1
DPKG_FOUND=$?

# Stop existing agent
reg="omsagent-[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
sev=$(service --status-all | grep -P $reg -o)
ins=$(top -b -n 1 | grep omsagent)

# This section checks for existing omsagent and omsconfig packages already installed.
if [ "${DPKG_FOUND}" -eq 0 ]; then
    dpkg -s omsagent omsconfig > /dev/null 2>&1
    OMS_FOUND="${?}"
else
    rpm -q omsagent omsconfig > /dev/null 2>&1
    OMS_FOUND="${?}"
fi

if [ ! -z "$sev" ] | [ ! -z "$ins" ] | [ "${OMS_FOUND}" -eq 0 ]; then
    echo "Existing oms agent found $sev"
    service "$sev" stop
    rm -f /etc/init.d/omsagent*

    echo -n "Terminating existing oms agent.. "
    current_pids=$(sudo netstat -anop | grep ${rsyslog_port} | cut -c 81- | cut -d'/' -f 1 | cut -d'-' -f 1)
    for current_pid in $current_pids; do
      echo -n "$current_pid "
      sudo kill -sigkill $current_pid
      echo $current_pid > $PID_FILE_TEMP
      wait_until_process_stops $PID_FILE_TEMP 5
    done
    echo ""

    # Ensure nothing is running as the omsagent user
    pkill -u omsagent > /dev/null 2>&1

    if [ ${DPKG_FOUND} -eq 0 ]; then
        dpkg -r omsagent omsconfig
    else
        rpm -e omsagent omsconfig
    fi
fi

# Stop scx
which scxadmin > /dev/null 2>&1
if [ ! -z $? ]; then
    echo "Stopping scx instances"
    scxadmin -stop all
    service omid stop
    rm -f /etc/init.d/omid

    if [ ${DPKG_FOUND} -eq 0 ]; then
        dpkg -r omi scx
    else
        rpm -e omi scx
    fi
fi

# Removing the file to ensure onboarding is triggered upon re-installation.
# Checks to see if the file exists, and that it is empty.
if [ -f "/etc/opt/microsoft/omsagent/${workspace_id}/conf/.service_registered" -a ! -s "/etc/opt/microsoft/omsagent/${workspace_id}/conf/.service_registered" ]; then
    rm -f "/etc/opt/microsoft/omsagent/${workspace_id}/conf/.service_registered"
fi

# Redirect logs
mkdir -p /var/vcap/sys/log/omi
mkdir -p /var/vcap/sys/log/scx
mkdir -p /var/vcap/sys/log/omsconfig

mkdir -p /var/opt/omi
mkdir -p /var/opt/microsoft/scx

retry_create_symlinks /var/vcap/sys/log/omi /var/opt/omi/log
retry_create_symlinks /var/vcap/sys/log/scx /var/opt/microsoft/scx/log
retry_create_symlinks /var/vcap/sys/log/omsconfig /var/opt/microsoft/omsconfig

cp -f /var/vcap/packages/omsagent/logrotate.scx.conf /etc/logrotate.d/scx

# Write the onboard config
cat <<EOF > /etc/omsagent-onboard.conf
WORKSPACE_ID=$workspace_id
SHARED_KEY=$workspace_key
URL_TLD=$oms_top_level_domain
EOF

# Setup user account and permission
echo "Using identity $(id)"

count=$(grep -c '^omsagent:' /etc/group)
if [ "$count" == 0 ]; then
    # Create new user group omsagent
    groupadd -f "omsagent"
fi

count=$(grep -c '^omiusers:' /etc/group)
if [ "$count" == 0 ]; then
    # Create new user group omiusers
    groupadd -f "omiusers"
fi

count=$(grep -c '^omsagent:' /etc/passwd)
if [ "$count" == 0 ]; then
    # Create new user account omsagent
    useradd -M -N -s /bin/bash "omsagent"
fi

usermod -aG omsagent omsagent
usermod -aG omiusers omsagent

chown -h omsagent:omsagent /var/opt/microsoft/omsconfig
chown -h omsagent:omiusers /var/opt/microsoft/omsconfig
chown -h omsagent:omsagent /var/vcap/sys/log/omsconfig

# Add oms users to vcap group for file system access
usermod -aG vcap omsagent
usermod -aG vcap nxautomation

# Install packages
if [ ${DPKG_FOUND} -eq 0 ]; then
    (
    # Get a lock to prevent other bad actors running dpkg commands
    # e.g. bosh running parallel requests that might interfere
    flock -x 200

    # Used as a timeout
    DPKG_RETRIES=0

    # Checks dpkg/apt related lock files to see if they're already locked and in use
    # Also checks if DPKG_RETRIES hit the timeout value
    while fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1 \
&& [ "${DPKG_RETRIES}" -lt 300 ]; do
        DPKG_RETRIES=$(( DPKG_RETRIES + 1 ))
        sleep 1
    done

    dpkg -i --force-confold --force-confdef /var/vcap/packages/omsagent/omi*.deb /var/vcap/packages/omsagent/scx*.deb /var/vcap/packages/omsagent/omsagent*.deb /var/vcap/packages/omsagent/omsconfig*.deb || true
    ) 200>/var/vcap/data/dpkg.lock

    # Initializing to zero
    pkg_count=0

    # Get a count on the packages to see if all four were installed
    pkg_count=$(dpkg -l omsagent omsconfig omi scx | grep -c "^ii ")

    # Output some information and exit if all packages are not found.
    if [[ "${pkg_count}" -ne 4 ]]; then
        echo "Expected to find 4 packages, however only ${pkg_count} were detected. Some of the required \
omsagent packages are missing. Exiting the installation as it has failed to install all packages."
        exit 50
    fi

else
    rpm -Uvh --force /var/vcap/packages/omsagent/omi-*.rpm /var/vcap/packages/omsagent/scx*.rpm /var/vcap/packages/omsagent/omsagent*.rpm /var/vcap/packages/omsagent/omsconfig*.rpm || true

    # Initializing to zero
    pkg_count=0

    # Get a count on the packages to see if all four were installed
    pkg_count=$(rpm -q omsagent omsconfig omi scx | grep -v "is not installed" | wc -l)

    # Output some information and exit if all packages are not found.
    if [[ "${pkg_count}" -ne 4 ]]; then
        echo "Expected to find 4 packages, however only ${pkg_count} were detected. Some of the required \
omsagent packages are missing. Exiting the installation as it has failed to install all packages."
        exit 50
    fi
fi

chown -h omsagent:omiusers /var/opt/microsoft/omsconfig

# Backup the default configuration, at every deployment the rsyslog config will be first restored from default and then changed according to job properties
if [ ! -e /etc/opt/microsoft/omsagent/sysconf/95-omsagent.conf.bk ]; then
    cp /etc/rsyslog.d/95-omsagent.conf /etc/opt/microsoft/omsagent/sysconf/95-omsagent.conf.bk
fi

# Disable the default service
service omsagent-${workspace_id} stop
rm -f /etc/init.d/omsagent*
systemctl stop omsagent-${workspace_id}
systemctl disable omsagent-${workspace_id}
rm -f /lib/systemd/system/omsagent*

scxadmin -stop all
service omid stop
rm -f /etc/init.d/omid
systemctl stop omid
systemctl disable omid
rm -f /lib/systemd/system/omid.service

# Add the config for collecting uaa.log
if [ -f /var/vcap/sys/log/uaa/uaa.log ]; then
    cp -f /var/vcap/packages/omsagent/oms.uaa.conf /etc/opt/microsoft/omsagent/conf/omsagent.d/uaa.conf
fi
